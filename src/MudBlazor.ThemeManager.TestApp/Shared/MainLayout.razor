@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" Theme="_themeManager" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudTooltip  Text="@(_drawerOpen ? "Close Navigation" : "Open Navigation")">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        </MudTooltip>
        <MudTooltip Text="@(_isDarkMode ? "Light Mode" : "Dark Mode")">
        <MudIconButton Icon="@(_isDarkMode ? @Icons.Material.Filled.LightMode : @Icons.Material.Filled.DarkMode)" Color="Color.Inherit" OnClick="@((e) => DarkModeToggle())"/>
        </MudTooltip>

        <MudTooltip Text="GitHub">
            <MudIconButton Href="https://github.com/MudBlazor/ThemeManager" Target="_blank" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Edge="Edge.End" aria-label="Open GitHub repository"/>
        </MudTooltip>
        <MudSpacer/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" >
        <MudText Typo="Typo.h6" Class="px-4 pt-2">Theme Manager</MudText>
        <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Test Application</MudText>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
    <MudThemeManager Theme="_themeManager" ThemeChanged="UpdateTheme" IsDarkMode="@_isDarkMode" />
</MudLayout>

@code {
    private MudTheme _themeManager = new();
    private MudThemeProvider _mudThemeProvider;

    private bool _isDarkMode;
    private bool _drawerOpen = true;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
        StateHasChanged();
    }

    private void UpdateTheme(MudTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}