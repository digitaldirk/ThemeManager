@namespace MudBlazor.ThemeManager
@using Microsoft.AspNetCore.Components.Forms
@inherits ComponentBaseWithState

<CascadingValue Value="this">
    <MudDrawer Class="rounded-l-xl pa-2 border-solid border-l-4 border-y-4 mud-border-Background-Gray"
               Style="backdrop-filter: blur(10px); -webkit-backdrop-filter:blur(10px); background-color: rgba(var(--mud-palette-background), 0.2);z-index: 10000;height: 95vh;position: absolute; top: 2.5vh"
               @bind-Open:get="_openState.Value" @bind-Open:set="_openState.SetValueAsync" Anchor="Anchor.End"
               Elevation="25" Variant="@DrawerVariant.Temporary" Overlay="false" Width="312px">
        <div class="pa-2">
            <MudExpansionPanels Dense="true" MultiExpansion="true" Outlined="true">
                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">Theme Presets</MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudStack Row="true" AlignItems="AlignItems.Center">
                            <MudSelect Clearable="true" T="ThemePreset" @bind-Value="@SelectedThemePreset"
                                       Variant="Variant.Filled" Margin="Margin.Dense" Dense="true">
                                @foreach (var tp in ThemePreset.ThemePresets)
                                {
                                    <MudSelectItem Value="tp">@tp.PresetName</MudSelectItem>
                                }
                            </MudSelect>
                            <MudTooltip
                                Text="@(SelectedThemePreset == null ? "" : $"Apply {SelectedThemePreset.PresetName} Theme")">
                                <MudIconButton OnClick="ApplyThemePreset"
                                               Disabled="@(SelectedThemePreset == null ? true : false)"
                                               Icon="@Icons.Material.Filled.ColorLens" Variant="Variant.Filled"
                                               Color="Color.Primary"/>
                            </MudTooltip>
                        </MudStack>
                    </ChildContent>
                </MudExpansionPanel>
                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">Breakpoints</MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerMiniWidthLeft"
                                         ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Extra Small (xs)"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerMiniWidthRight"
                                         ValueChanged="OnDrawerMiniWidthRightAsync" T="int" Label="Small (sm)"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerWidthLeft"
                                         ValueChanged="OnDrawerWidthLeftAsync" T="int" Label="Medium (md)"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerWidthRight"
                                         ValueChanged="OnDrawerWidthRightAsync" T="int" Label="Large (lg)"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="1" Min="0" Max="300" Value="AppbarHeight"
                                         ValueChanged="OnAppbarHeightAsync" T="int" Label="Extra Large (xl)"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="1" Min="0" Max="300" Value="AppbarHeight"
                                         ValueChanged="OnAppbarHeightAsync" T="int" Label="Extra Extra Large (xxl)"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>
                    </ChildContent>
                </MudExpansionPanel>
                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">Layout Properties</MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudSlider Step="1" Min="0" Max="25" T="int" ValueChanged="OnDefaultBorderRadiusAsync">
                            <MudText Typo="Typo.body2">Default Border Radius:
                                <b>@($"{Theme.LayoutProperties.DefaultBorderRadius}")</b></MudText>
                        </MudSlider>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerMiniWidthLeft"
                                         ValueChanged="OnDrawerMiniWidthLeftAsync" T="int"
                                         Label="Drawer Mini Width Left" Variant="Variant.Outlined"
                                         Margin="Margin.Dense"/>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerMiniWidthRight"
                                         ValueChanged="OnDrawerMiniWidthRightAsync" T="int"
                                         Label="Drawer Mini Width Right" Variant="Variant.Outlined"
                                         Margin="Margin.Dense"/>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerWidthLeft"
                                         ValueChanged="OnDrawerWidthLeftAsync" T="int" Label="Drawer Width Left"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="10" Min="0" Max="1000" Value="DrawerWidthRight"
                                         ValueChanged="OnDrawerWidthRightAsync" T="int" Label="Drawer Width Right"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>

                        <MudNumericField Step="1" Min="0" Max="300" Value="AppbarHeight"
                                         ValueChanged="OnAppbarHeightAsync" T="int" Label="Appbar Height"
                                         Variant="Variant.Outlined" Margin="Margin.Dense"/>
                    </ChildContent>
                </MudExpansionPanel>

                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">@(_isDarkModeState.Value ? "Dark" : "Light") Palette</MudText>
                    </TitleContent>
                    <ChildContent>
                        @foreach (ThemePaletteColor tpc in Enum.GetValues(typeof(ThemePaletteColor)))
                        {
                            MudColor? color;
                            var prop = _currentPalette.GetType().GetProperty(tpc.ToString());

                            if (prop != null)
                            {
                                if (prop.GetType() == typeof(MudColor))
                                {
                                    color = (MudColor)prop.GetValue(_currentPalette);
                                }
                                else
                                {
                                    color = MudColor.Parse(prop.GetValue(_currentPalette).ToString());
                                }

                                <MudButton OnClick="@(() => SetupColorPicker((MudColor)color, tpc))" FullWidth="true">
                                    <div style="width:100%;">
                                        <MudText Typo="Typo.body2">@tpc.ToString()</MudText>
                                        <div class="rounded-pill mud-elevation-3"
                                             style="background:@color;height: 25px"/>
                                    </div>
                                </MudButton>
                            }
                        }
                    </ChildContent>
                </MudExpansionPanel>

                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">Shadows (Elevation)</MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudGrid Spacing="2">
                            @for (var i = 0; i < _customTheme.Shadows.Elevation.Length; i++)
                            {
                                var index = i;
                                <MudItem xs="12">
                                    <MudTextField AutoGrow="true" Margin="Margin.Dense" Variant="Variant.Outlined"
                                                  Immediate="true" Value="_customTheme.Shadows.Elevation[index]"
                                                  ValueChanged="@(async (string val) => await OnElevationAsync(index, val))"
                                                  Label="@($"Elevation {index}")" FullWidth="true"/>
                                </MudItem>
                            }
                        </MudGrid>

                    </ChildContent>
                </MudExpansionPanel>
                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">Typography (Text)</MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudSelect Label="Font Family" T="string" Value="@FontFamily" ValueChanged="OnFontFamilyAsync"
                                   Dense="true" Underline="false" Class="my-2">
                            <MudSelectItem T="string" Value="@("Roboto")"/>
                            <MudSelectItem T="string" Value="@("Montserrat")"/>
                            <MudSelectItem T="string" Value="@("Segoe UI")"/>
                            <MudSelectItem T="string" Value="@("Ubuntu")"/>
                        </MudSelect>

                        <MudExpansionPanel Text="H1">
                            <MudSelect Label="Font Family" T="string" Value="@FontFamily"
                                       ValueChanged="OnFontFamilyAsync" Dense="true" Underline="false" Class="my-2">
                                <MudSelectItem T="string" Value="@("Roboto")"/>
                                <MudSelectItem T="string" Value="@("Montserrat")"/>
                                <MudSelectItem T="string" Value="@("Segoe UI")"/>
                                <MudSelectItem T="string" Value="@("Ubuntu")"/>
                            </MudSelect>

                            <MudNumericField Step="100" Min="0" Max="1000" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Font Weight"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>

                            <MudNumericField Step="1" Min="0" Max="100" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Font Size"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>

                            <MudNumericField Step="1" Min="0" Max="5" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Line Height"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>


                            <MudNumericField Step="1" Min="0" Max="5" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Letter Spacing"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        </MudExpansionPanel>

                        <MudExpansionPanel Text="H2">
                            <MudSelect Label="Font Family" T="string" Value="@FontFamily"
                                       ValueChanged="OnFontFamilyAsync" Dense="true" Underline="false" Class="my-2">
                                <MudSelectItem T="string" Value="@("Roboto")"/>
                                <MudSelectItem T="string" Value="@("Montserrat")"/>
                                <MudSelectItem T="string" Value="@("Segoe UI")"/>
                                <MudSelectItem T="string" Value="@("Ubuntu")"/>
                            </MudSelect>

                            <MudNumericField Step="100" Min="0" Max="1000" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Font Weight"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>

                            <MudNumericField Step="1" Min="0" Max="100" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Font Size"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>

                            <MudNumericField Step="1" Min="0" Max="5" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Line Height"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>


                            <MudNumericField Step="1" Min="0" Max="5" Value="DrawerMiniWidthLeft"
                                             ValueChanged="OnDrawerMiniWidthLeftAsync" T="int" Label="Letter Spacing"
                                             Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        </MudExpansionPanel>
                        @* *@
                        @* *@
                        @* /// <summary> *@
                        @*     /// The text transformation. *@
                        @*     /// </summary> *@
                        @* public string TextTransform { get; set; } = "none"; *@
                        @* } *@

                    </ChildContent>
                </MudExpansionPanel>
                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="Typo.h6">Z Index</MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudNumericField Step="1" Value="_customZIndex.Drawer" ValueChanged="OnDrawerZIndexAsync"
                                         T="int" Label="Drawer" Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        <MudNumericField Step="1" Value="_customZIndex.Popover" ValueChanged="OnPopoverZIndexAsync"
                                         T="int" Label="Popover" Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        <MudNumericField Step="1" Value="_customZIndex.AppBar" ValueChanged="OnAppBarZIndexAsync"
                                         T="int" Label="AppBar" Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        <MudNumericField Step="1" Value="_customZIndex.Dialog" ValueChanged="OnDialogZIndexAsync"
                                         T="int" Label="Dialog" Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        <MudNumericField Step="1" Value="_customZIndex.Snackbar" ValueChanged="OnSnackbarZIndexAsync"
                                         T="int" Label="Snackbar" Variant="Variant.Outlined" Margin="Margin.Dense"/>
                        <MudNumericField Step="1" Value="_customZIndex.Tooltip" ValueChanged="OnTooltipZIndexAsync"
                                         T="int" Label="Tooltip" Variant="Variant.Outlined" Margin="Margin.Dense"/>
                    </ChildContent>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </div>
    </MudDrawer>

    <MudTooltip Inline="false" Arrow="true" Placement="Placement.Left"
                Text="@(_openState.Value ? "Hide Theme Manager" : "Show Theme Manager")">
        <MudIconButton
            Style="@($"right: {(_openState.Value ? "312px" : "0px")};top:7.5%;position: fixed;z-index: 10000;")"
            Class="rounded-l-lg rounded-0 border-solid border-l-2 border-y-2 mud-border-Background-Gray"
            OnClick="@(() => _openState.SetValueAsync(!_openState.Value))"
            Icon="@(_openState.Value ? Icons.Material.Filled.ArrowRight : Icons.Material.Filled.ArrowLeft)"
            Variant="Variant.Filled" Color="Color.Primary"/>
    </MudTooltip>

    <MudTooltip Inline="true" Arrow="true" Placement="Placement.Left"
                Text="@(_isDarkModeState.Value ? "Switch to Light Mode" : "Switch to Dark Mode")">
        <MudIconButton
            Style="@($"right: {(_openState.Value ? "312px" : "0px")};top:15%;position: fixed;z-index: 10000;")"
            Class="rounded-l-lg rounded-0 border-solid border-l-2 border-y-2 mud-border-Background-Gray"
            OnClick="@(() => _isDarkModeState.SetValueAsync(!_isDarkModeState.Value))"
            Icon="@(_isDarkModeState.Value ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
            Variant="Variant.Filled" Color="Color.Primary"/>
    </MudTooltip>

    <MudTooltip Arrow="true" Placement="Placement.Left" Text="Import Theme">
        <MudFileUpload T="IBrowserFile" FilesChanged="ImportTheme" Accept=".json" MaximumFileCount="1">
            <ActivatorContent>
                <MudIconButton
                    Style="@($"right: {(_openState.Value ? "312px" : "0px")};top:22.5%;position: fixed;z-index: 10000;")"
                    Class="rounded-l-lg rounded-0 border-solid border-l-2 border-y-2 mud-border-Background-Gray"
                    Icon="@Icons.Material.Filled.Upload" Variant="Variant.Filled" Color="Color.Primary"/>
            </ActivatorContent>
        </MudFileUpload>
    </MudTooltip>

    <MudTooltip Arrow="true" Placement="Placement.Left" Text="Export Theme">
        <MudIconButton OnClick="ExportTheme"
                       Style="@($"right: {(_openState.Value ? "312px" : "0px")};top:30%;position: fixed;z-index: 10000;")"
                       Class="rounded-l-lg rounded-0 border-solid border-l-2 border-y-2 mud-border-Background-Gray"
                       Icon="@Icons.Material.Filled.SaveAs" Variant="Variant.Filled" Color="Color.Primary"/>
    </MudTooltip>

    <MudTooltip Arrow="true" Placement="Placement.Left" Text="Revert to Default Theme">
        <MudIconButton OnClick="RevertTheme"
                       Style="@($"right: {(_openState.Value ? "312px" : "0px")};top:37.5%;position: fixed;z-index: 10000;")"
                       Class="rounded-l-lg rounded-0 border-solid border-l-2 border-y-2 mud-border-Background-Gray"
                       Icon="@Icons.Material.Filled.Warning" Variant="Variant.Filled" Color="Color.Primary"/>
    </MudTooltip>

    @if (_openState.Value && _colorPickerOpen)
    {
        <MudPaper Elevation="0"
                  Class="rounded-l-lg border-solid border-l-4 border-y-4 mud-border-Background-Gray ma-0 pa-0"
                  Style="right:312px;bottom:5%;position:fixed;z-index: 10000;">
            <MudStack Row="true" AlignItems="AlignItems.Center" Class="px-2">
                @ColorType.ToString()
                <MudTooltip Text="Reset value to default">
                    <MudIconButton
                        OnClick="@(() => SetupColorPicker(DefaultPaletteDark.Primary, ThemePaletteColor.Primary))"
                        Icon="@Icons.Material.Filled.ChangeCircle"/>
                </MudTooltip>
                @if (_isDarkModeState.Value)
                {
                    <MudTooltip Text="Copy from light palette value">
                        <MudIconButton Style="@($"color:{Theme.PaletteLight.Primary};")"
                                       Icon="@Icons.Material.TwoTone.LightMode"/>
                    </MudTooltip>
                }
                else
                {
                    <MudTooltip Text="Copy from dark palette value">
                        <MudIconButton Style="@($"color:{Theme.PaletteDark.Primary};")"
                                       Icon="@Icons.Material.TwoTone.Nightlight"/>
                    </MudTooltip>
                }

            </MudStack>
            <MudColorPicker Value="_setupPalleteColor" ValueChanged="UpdateColor" PickerVariant="PickerVariant.Static"
                            ColorPickerView="ColorPickerView"/>
        </MudPaper>
    }

    <MudDialog @bind-Visible="_exportVisible" Options="_exportDialogOptions">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.SaveAs" Class="mr-3"/>
                Export Theme
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudStack Row="true">
                <MudPaper>
                    <MudTextField T="string" Label="Theme as Json" Variant="Variant.Outlined" Text="@_jsonExport"
                                  Lines="5"/>
                </MudPaper>
                <MudSpacer/>
                <MudPaper>
                    <MudTextField T="string" Label="Theme as C#" Variant="Variant.Outlined"
                                  Text="@GenerateCSharpCode(Theme)" Lines="5"/>
                </MudPaper>
            </MudStack>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ToggleExportDialog" Class="px-10">Close
            </MudButton>
        </DialogActions>
    </MudDialog>
</CascadingValue>